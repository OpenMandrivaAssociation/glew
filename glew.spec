# glew is used by mesa-demos - and we want 32-bit glxinfo for debugging
%ifarch %{x86_64}
%bcond_without compat32
%endif

%define	major	2.2
%define	libname	%mklibname %{name} %{major}
#define	libmx	%mklibname %{name}mx %{major}
%define	devname	%mklibname %{name} -d
%define lib32name %mklib32name %{name} %{major}
%define dev32name %mklib32name %{name} -d
%define _disable_lto 1

Summary:	The OpenGL Extension Wrangler Library
Name:		glew
Version:	2.2.0
Release:	6
Group:		Development/C
License:	BSD and MIT
Url:		http://glew.sourceforge.net
# Current source is maintained at
# https://github.com/nigels-com/glew
Source0:	https://github.com/nigels-com/glew/archive/refs/tags/glew-%{version}.tar.gz
# Needed to generate autogenerated files
Source1:	https://github.com/KhronosGroup/OpenGL-Registry/archive/refs/heads/main.tar.gz#/OpenGL-Registry.tar.gz
Source2:	https://github.com/KhronosGroup/EGL-Registry/archive/refs/heads/main.tar.gz#/EGL-Registry.tar.gz
Source3:	https://github.com/nigels-com/glfixes/archive/refs/heads/glew.tar.gz#/glfixes.tar.gz

# Patches from upstream
Patch00:	0001-Add-lgtm.yml-configuration-file.patch
Patch01:	0002-Rename-lgtm.yml-to-hide-the-file.patch
Patch02:	0003-docs-fix-simple-typo-direcly-directly.patch
Patch03:	0004-The-file-include-GL-gl.h-generated-from-OpenGL-Regis.patch
Patch04:	0005-fix-typo.patch
Patch05:	0006-Use-context-manager-instead-of-raw-open.patch
Patch06:	0007-Use-list-comprehension-instead-of-extending-the-coll.patch
Patch07:	0008-Fixup-Install-eglew.h-too.patch
Patch08:	0009-README.md-Updates-for-GLEW-2.2.0-release-downloads-v.patch
Patch09:	0010-EGLEW-Wayland-wl_display-and-wl_resource-declaration.patch
Patch10:	0011-EGLEW-Wayland-wl_buffer-declaration-for-WL_bind_wayl.patch
Patch11:	0012-GLEW_EGL-Fix-EGL-library-check.patch
Patch12:	0013-Documentation-refresh-for-GLEW-2.2.0-downloads-from-.patch
Patch13:	0014-Use-os.path.join-to-create-paths.patch
Patch14:	0015-CMake-Add-X11-EGL-options.patch
Patch15:	0016-CMake-Add-BUILD_SHARED_LIBS-option.patch
Patch16:	0017-CMake-Prefer-GLVND-if-available.patch
Patch17:	0018-Add-ability-to-change-output-dirs.patch
Patch18:	0019-Install-to-usr-local-by-default-when-using-Makefiles.patch
Patch19:	0020-Fix-build-race-in-Makefile.patch
Patch20:	0021-glewGetErrorString-for-GLEW_ERROR_NO_GLX_DISPLAY-add.patch
Patch21:	0022-Extend-GLEW-API-to-support-glewContextInit-GL-withou.patch
Patch22:	0023-Makefile-don-t-strip-in-install-step.patch
Patch23:	0024-For-SYSTEM-linux-mingw32-and-linux-mingw64-default-G.patch
Patch24:	0025-visualinfo-EGL-not-supported-yet-error-out-more-clea.patch
Patch25:	0026-Disable-stripping-in-debug-mode-builds.patch
Patch26:	0027-Add-support-for-building-against-vendor-neutral-GLVN.patch
Patch27:	0028-Specify-that-EGL-GLVND-doesn-t-use-GLU.patch
Patch28:	0029-Fix-various-typos.patch
Patch29:	0030-Updated-config.guess-from-https-github.com-gcc-mirro.patch

# OM patches
Patch100:	glew-2.0.0-pkgconfig.patch
Patch101:	glew-2.2.0-include-egl.patch
# FIXME this should be fixed somehow to support X-less Wayland as well
Patch102:	glew-2.2.0-visualinfo-x11-deps.patch
# This too, EGL shouldn't really rely on GLX
Patch103:	glew-link-libGLX.patch


BuildRequires:	make
BuildRequires:	file
BuildRequires:	pkgconfig(egl)
BuildRequires:	pkgconfig(glu)
BuildRequires:	pkgconfig(x11)
BuildRequires:	pkgconfig(xi)
BuildRequires:	pkgconfig(xmu)

# For generating autogenerated files
BuildRequires:	perl
BuildRequires:	python

%if %{with compat32}
BuildRequires:	devel(libGLU)
BuildRequires:	devel(libX11)
BuildRequires:	devel(libXi)
BuildRequires:	devel(libXmu)
BuildRequires:	devel(libxcb)
BuildRequires:	devel(libXau)
BuildRequires:	devel(libXdmcp)
BuildRequires:	devel(libGL)
BuildRequires:	devel(libGLdispatch)
BuildRequires:	devel(libEGL)
%endif

%description
The goal of the OpenGL Extension Wrangler Library (GLEW) is to assist C/C++
OpenGL developers with two tedious tasks: initializing and using extensions
and writing portable applications. GLEW provides an efficient run-time
mechanism to determine whether a certain extension is supported by the
driver or not. OpenGL core and extension functionality is exposed via a
single header file. GLEW currently supports a variety of platforms and
operating systems, including Windows, Linux, Darwin, Irix, and Solaris. 

%package -n %{libname}
Summary:	GLEW library
Group:		System/Libraries

%description -n %{libname}
This package contains a shared library for %{name}.

# Support for GLEWmx is dropped since GLEW 2.0 (Penguin) https://github.com/arrayfire/arrayfire/issues/1515
#package -n %{libmx}
#Summary:	GLEW library
#Group:		System/Libraries
#Conflicts:	%{_lib}glew1.9 < 1.9.0-3

#description -n %{libmx}
#This package contains a shared library for %{name}.

%package -n %{devname}
Summary:	Development files for using the %{name} library
Group:		Development/C
Requires:	%{libname} = %{version}-%{release}
#Requires:	%{libmx} = %{version}-%{release}
Provides:	%{name}-devel = %{version}-%{release}

%description -n %{devname}
Development files for using the %{name} library.

%if %{with compat32}
%package -n %{lib32name}
Summary:	GLEW library (32-bit)
Group:		System/Libraries

%description -n %{lib32name}
This package contains a shared library for %{name}.

%package -n %{dev32name}
Summary:	Development files for using the %{name} library (32-bit)
Group:		Development/C
Requires:	%{devname} = %{version}-%{release}
Requires:	%{lib32name} = %{version}-%{release}

%description -n %{dev32name}
Development files for using the %{name} library.
%endif

%prep
%autosetup -p1 -n %{name}-%{name}-%{version}
# Untar bits needed to generate autogenerated files
cd auto
tar xf %{S:1}
tar xf %{S:2}
tar xf %{S:3}
mv OpenGL-Registry-* OpenGL-Registry
mv EGL-Registry-* EGL-Registry
mv glfixes-* glfixes
touch OpenGL-Registry/.dummy EGL-Registry/.dummy glfixes/.dummy
# And generate the files... Not SMP clean
%make_build -j1
cd ..

# Fix missing clang config
cd config
if [ -e Makefile.linux-clang-egl-glvnd ]; then
	echo Missing linux-clang-egl-glvnd has been fixed upstream, kill the workaround
	exit 1
fi
sed -e 's/Makefile.linux/Makefile.linux-clang/g' Makefile.linux-egl-glvnd >Makefile.linux-clang-egl-glvnd
cd ..

# strip away annoying ^M
find . -type f|xargs file|grep 'CRLF'|cut -d: -f1|xargs perl -p -i -e 's/\r//'
find . -type f|xargs file|grep 'text'|cut -d: -f1|xargs perl -p -i -e 's/\r//'

#fix txt/doc files permissions
chmod 0755 doc
chmod 0644 doc/* README.md

sed -i 's|cc|%{__cc}|g' config/Makefile.linux*

# Fix missing symbols.
# FIXME we need a better fix to support wayland properly...
#sed -i -e 's|-lOpenGL|-lOpenGL -lX11|g' config/Makefile.linux*

%if %{with compat32}
mkdir -p build32
cp -a $(ls -1 |grep -v build32) build32/
%endif

%build
%before_configure
%if %{with compat32}
%make_build -C build32 GLEW_PREFIX=%{_prefix} GLEW_DEST=%{_prefix} CC="%{_bindir}/gcc -m32" LD="%{_bindir}/gcc -m32" CFLAGS.EXTRA="$(echo %{optflags} |sed -e 's,-m64,,g;s,-flto,,g') -fPIC -m32" STRIP= libdir=%{_prefix}/lib bindir=%{_bindir} includedir=%{_includedir} ARCH64=false LDFLAGS.EXTRA="" SYSTEM=linux-egl-glvnd
%endif
%make_build GLEW_PREFIX=%{_prefix} GLEW_DEST=%{_prefix} CFLAGS.EXTRA="%{optflags} -fPIC -flto" STRIP= libdir=%{_libdir} bindir=%{_bindir} includedir=%{_includedir} SYSTEM=linux-clang-egl-glvnd

%install
%if %{with compat32}
make -C build32 install.all DESTDIR="%{buildroot}" GLEW_PREFIX=%{_prefix} GLEW_DEST=%{_prefix} CC="%{_bindir}/gcc -m32" LD="%{_bindir}/gcc -m32" LIBDIR=%{_prefix}/lib bindir=%{_bindir} includedir=%{_includedir} SYSTEM=linux-egl-glvnd
rm -f %{buildroot}%{_prefix}/lib/*.a
%endif
make install.all DESTDIR="%{buildroot}" GLEW_PREFIX=%{_prefix} GLEW_DEST=%{_prefix} LIBDIR=%{_libdir} bindir=%{_bindir} includedir=%{_includedir} SYSTEM=linux-clang-egl-glvnd
rm -f %{buildroot}%{_libdir}/*.a

chmod 0755 %{buildroot}%{_libdir}/*.so*

%files
%doc README.md doc
%{_bindir}/*

%files -n %{libname}
%{_libdir}/libGLEW.so.%{major}*

#files -n %{libmx}
#{_libdir}/libGLEWmx.so.%{major}*

%files -n %{devname}
%{_includedir}/GL/*.h
%{_libdir}/libGLEW*.so
%{_libdir}/pkgconfig/%{name}.pc

%if %{with compat32}
%files -n %{lib32name}
%{_prefix}/lib/libGLEW.so.%{major}*

%files -n %{dev32name}
%{_prefix}/lib/libGLEW*.so
%{_prefix}/lib/pkgconfig/%{name}.pc
%endif
